version: '3.8'

services:
  # Open Agentic Framework Application
  agentic-ai:
    build: .
    container_name: agentic-ai-framework
    ports:
      - "8000:8000"
    environment:
      - OLLAMA_URL=http://ollama:11434
      - DEFAULT_MODEL=granite3.2:2b
      - DATABASE_PATH=/app/data/agentic_ai.db
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - MAX_AGENT_ITERATIONS=10
      - SCHEDULER_INTERVAL=60
      - TOOLS_DIRECTORY=tools
    volumes:
      - ./data:/app/data
      - ./tools:/app/tools
      - ./logs:/app/logs
    depends_on:
      - ollama
      - model-setup
    restart: unless-stopped
    networks:
      - agentic-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Ollama LLM Service
  ollama:
    image: ollama/ollama:latest
    container_name: agentic-ai-ollama
    ports:
      - "11434:11434"
    environment:
      - OLLAMA_HOST=0.0.0.0:11434
    volumes:
      - ollama_data:/root/.ollama
    restart: unless-stopped
    networks:
      - agentic-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Model Setup - Downloads models automatically using alpine + curl
  model-setup:
    image: alpine/curl:latest
    container_name: agentic-ai-model-setup
    depends_on:
      - ollama
    networks:
      - agentic-network
    command: >
      sh -c "
        echo 'Waiting for Ollama to be ready...' &&
        while ! curl -f http://ollama:11434/api/tags; do
          echo 'Ollama not ready, waiting 10 seconds...'
          sleep 10
        done &&
        
        echo '=== Starting model downloads ===' &&
        echo 'This will download 5 small models (total ~3.2GB)' &&

        # Model 1: TinyLlama 1.1B (~637MB) - Fast and efficient
        echo 'Downloading TinyLlama 1.1B (637MB)...' &&
        curl -X POST http://ollama:11434/api/pull -d '{\"name\":\"tinyllama:1.1b\"}' -H 'Content-Type: application/json' &&
        echo '✓ TinyLlama downloaded' &&
        
        # Model 2: Granite 3.2 2B (~700MB) - IBM's efficient model
        echo 'Downloading Granite 3.2 2B (700MB)...' &&
        curl -X POST http://ollama:11434/api/pull -d '{\"name\":\"granite3.2:2b\"}' -H 'Content-Type: application/json' &&
        echo '✓ Granite 3.2 downloaded' &&
        
        # Model 3: DeepSeek-R1 1.5B (~1.1GB) - Reasoning specialist
        echo 'Downloading DeepSeek-R1 1.5B (1.1GB)...' &&
        curl -X POST http://ollama:11434/api/pull -d '{\"name\":\"deepseek-r1:1.5b\"}' -H 'Content-Type: application/json' &&
        echo '✓ DeepSeek-R1 downloaded' &&
        
        echo '=== All models downloaded successfully! ===' &&
        echo 'Available models:' &&
        curl -s http://ollama:11434/api/tags | grep -o '\"name\":\"[^\"]*\"' &&
        echo 'Model downloader completed!'
      "
    restart: "no"

volumes:
  ollama_data:
    driver: local

networks:
  agentic-network:
    driver: bridge