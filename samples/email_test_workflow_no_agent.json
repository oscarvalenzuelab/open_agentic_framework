{
  "metadata": {
    "timestamp": "2025-06-25T04:48:01.168397",
    "version": "1.0",
    "backup_name": "email_no_agent_pasing",
    "options": {
      "export_path": "backups",
      "include_memory": false,
      "include_config": true,
      "include_tools": true,
      "include_scheduled_tasks": true,
      "create_zip": true,
      "backup_name": "email_no_agent_pasing"
    }
  },
  "agents": [],
  "workflows": [
    {
      "id": 1,
      "name": "email_test_workflow_no_agent",
      "description": "Test email checker with tool-level configuration",
      "steps": [
        {
          "type": "tool",
          "name": "email_checker",
          "tool": "email_checker",
          "task": null,
          "parameters": {
            "action": "check_emails",
            "protocol": "imap",
            "folder": "INBOX",
            "unread_only": true,
            "include_attachments": false,
            "limit": 1
          },
          "context_key": "email_list",
          "use_previous_output": false,
          "preserve_objects": false
        },
        {
          "type": "tool",
          "name": "email_checker",
          "tool": null,
          "task": null,
          "parameters": {
            "action": "read_email",
            "email_id": "1",
            "unread_only": true,
            "limit": 2
          },
          "context_key": "email_content",
          "use_previous_output": false,
          "preserve_objects": false
        },
        {
          "type": "tool",
          "name": "email_data_converter",
          "tool": null,
          "task": null,
          "parameters": {
            "email_data": "{{email_content}}",
            "action": "convert_to_object"
          },
          "context_key": "converted_email_data",
          "use_previous_output": false,
          "preserve_objects": false
        },
        {
          "type": "tool",
          "name": "email_attachment_downloader",
          "tool": null,
          "task": null,
          "parameters": {
            "email_data": "{{converted_email_data.result}}",
            "download_path": "/tmp/email_attachments",
            "store_in_vault": true
          },
          "context_key": "attachments",
          "use_previous_output": false,
          "preserve_objects": true
        },
        {
          "type": "tool",
          "name": "file_vault",
          "tool": null,
          "task": null,
          "parameters": {
            "action": "read",
            "filename": "{{attachments.vault_files[0].vault_filename}}",
            "vault_id": "{{attachments.vault_id}}"
          },
          "context_key": "vault_file_content",
          "use_previous_output": false,
          "preserve_objects": false
        },
        {
          "type": "tool",
          "name": "data_extractor",
          "tool": "data_extractor",
          "task": null,
          "parameters": {
            "source_data": "{{vault_file_content.content}}",
            "extractions": [
              {
                "name": "purls",
                "type": "join_field",
                "query": "components",
                "field": "purl",
                "separator": ",",
                "default": ""
              }
            ]
          },
          "context_key": "extracted_purls",
          "use_previous_output": false,
          "preserve_objects": true
        }
      ],
      "enabled": true,
      "input_schema": {
        "type": "object",
        "properties": {},
        "required": []
      },
      "output_spec": {
        "extractions": []
      },
      "created_at": "2025-06-24 03:37:05.017164",
      "updated_at": "2025-06-24 08:01:04.691998"
    }
  ],
  "tools": [
    {
      "id": 1,
      "name": "json_validator",
      "description": "Validate JSON documents against schemas. Supports SBOM formats (SPDX, CycloneDX) and custom schemas.",
      "parameters_schema": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "Action to perform: 'validate', 'get_schema', 'list_formats'",
            "enum": [
              "validate",
              "get_schema",
              "list_formats"
            ]
          },
          "json_data": {
            "type": "string",
            "description": "JSON data to validate (required for validate action)"
          },
          "schema_type": {
            "type": "string",
            "description": "Type of schema to use: 'spdx', 'cyclonedx', 'custom'",
            "enum": [
              "spdx",
              "cyclonedx",
              "custom"
            ],
            "default": "spdx"
          },
          "custom_schema": {
            "type": "object",
            "description": "Custom JSON schema (required when schema_type is 'custom')"
          },
          "strict": {
            "type": "boolean",
            "description": "Whether to use strict validation (fail on warnings)",
            "default": false
          },
          "extract_errors": {
            "type": "boolean",
            "description": "Extract and return detailed validation errors",
            "default": true
          }
        },
        "required": [
          "action"
        ]
      },
      "class_name": "JsonValidatorTool",
      "enabled": true,
      "configuration": {},
      "created_at": "2025-06-24 03:36:35.212022",
      "updated_at": "2025-06-24 03:36:35.212029"
    },
    {
      "id": 2,
      "name": "http_client",
      "description": "Perform HTTP requests (GET, POST, PUT, DELETE) to web APIs and websites. Supports custom headers and authentication.",
      "parameters_schema": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "The URL to request"
          },
          "method": {
            "type": "string",
            "description": "HTTP method: GET, POST, PUT, DELETE",
            "default": "GET"
          },
          "headers": {
            "type": "object",
            "description": "Optional HTTP headers as key-value pairs",
            "default": {}
          },
          "data": {
            "type": "object",
            "description": "Request body data for POST/PUT requests",
            "default": {}
          },
          "params": {
            "type": "object",
            "description": "URL query parameters as key-value pairs",
            "default": {}
          },
          "timeout": {
            "type": "integer",
            "description": "Request timeout in seconds",
            "default": 30
          },
          "follow_redirects": {
            "type": "boolean",
            "description": "Whether to follow HTTP redirects",
            "default": true
          },
          "verify_ssl": {
            "type": "boolean",
            "description": "Whether to verify SSL certificates",
            "default": true
          }
        },
        "required": [
          "url"
        ]
      },
      "class_name": "HttpClientTool",
      "enabled": true,
      "configuration": {},
      "created_at": "2025-06-24 03:36:35.219208",
      "updated_at": "2025-06-24 03:36:35.219210"
    },
    {
      "id": 3,
      "name": "data_extractor",
      "description": "Extract data from JSON objects and text using smart path queries that can find nodes dynamically.",
      "parameters_schema": {
        "type": "object",
        "properties": {
          "source_data": {
            "type": "string",
            "description": "Source data as JSON string"
          },
          "extractions": {
            "type": "array",
            "description": "List of extraction operations",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name for extracted value"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "path",
                    "regex",
                    "literal",
                    "find"
                  ],
                  "description": "Extraction type"
                },
                "query": {
                  "type": "string",
                  "description": "Path query, pattern, or find criteria"
                },
                "default": {
                  "type": "string",
                  "description": "Default value as string"
                },
                "format": {
                  "type": "string",
                  "enum": [
                    "text",
                    "number",
                    "boolean"
                  ],
                  "default": "text",
                  "description": "Output format"
                },
                "find_criteria": {
                  "type": "object",
                  "description": "Criteria for finding nodes in arrays",
                  "properties": {
                    "array_path": {
                      "type": "string"
                    },
                    "match_field": {
                      "type": "string"
                    },
                    "match_value": {
                      "type": "string"
                    },
                    "extract_field": {
                      "type": "string"
                    }
                  }
                }
              },
              "required": [
                "name",
                "type",
                "query"
              ]
            }
          }
        },
        "required": [
          "source_data",
          "extractions"
        ]
      },
      "class_name": "DataExtractorTool",
      "enabled": true,
      "configuration": {},
      "created_at": "2025-06-24 03:36:35.225051",
      "updated_at": "2025-06-24 03:36:35.225052"
    },
    {
      "id": 4,
      "name": "website_monitor",
      "description": "Monitor website availability and response time. Checks if a website is online and measures response time.",
      "parameters_schema": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "The URL to monitor (must include http:// or https://)"
          },
          "timeout": {
            "type": "integer",
            "description": "Request timeout in seconds",
            "default": 10
          },
          "expected_status": {
            "type": "integer",
            "description": "Expected HTTP status code",
            "default": 200
          },
          "check_content": {
            "type": "string",
            "description": "Optional text to check for in the response content",
            "default": ""
          }
        },
        "required": [
          "url"
        ]
      },
      "class_name": "WebsiteMonitorTool",
      "enabled": true,
      "configuration": {},
      "created_at": "2025-06-24 03:36:35.230798",
      "updated_at": "2025-06-24 03:36:35.230799"
    },
    {
      "id": 5,
      "name": "email_parser",
      "description": "Parse email content and extract different content types (subject, body text/html, headers, recipients, attachments info). Works with email data from email_checker tool.",
      "parameters_schema": {
        "type": "object",
        "properties": {
          "email_data": {
            "type": "object",
            "description": "Email data object from email_checker tool"
          },
          "parse_headers": {
            "type": "boolean",
            "description": "Whether to parse and include email headers",
            "default": true
          },
          "parse_body": {
            "type": "boolean",
            "description": "Whether to parse email body content",
            "default": true
          },
          "parse_attachments": {
            "type": "boolean",
            "description": "Whether to parse attachment information",
            "default": true
          },
          "extract_links": {
            "type": "boolean",
            "description": "Whether to extract links from email body",
            "default": false
          },
          "extract_emails": {
            "type": "boolean",
            "description": "Whether to extract email addresses from content",
            "default": false
          }
        },
        "required": [
          "email_data"
        ]
      },
      "class_name": "EmailParserTool",
      "enabled": true,
      "configuration": {},
      "created_at": "2025-06-24 03:36:35.236074",
      "updated_at": "2025-06-24 03:36:35.236075"
    },
    {
      "id": 6,
      "name": "email_sender",
      "description": "Send emails using SMTP with SSL/TLS support. Requires SMTP configuration in agent tool_configs (smtp_host, smtp_username, smtp_password).",
      "parameters_schema": {
        "type": "object",
        "properties": {
          "to": {
            "type": "string",
            "description": "Recipient email address"
          },
          "subject": {
            "type": "string",
            "description": "Email subject line"
          },
          "body": {
            "type": "string",
            "description": "Email body content"
          },
          "cc": {
            "type": "string",
            "description": "CC recipients (comma-separated email addresses)",
            "default": ""
          },
          "bcc": {
            "type": "string",
            "description": "BCC recipients (comma-separated email addresses)",
            "default": ""
          },
          "html": {
            "type": "boolean",
            "description": "Whether the body content is HTML",
            "default": false
          },
          "priority": {
            "type": "string",
            "description": "Email priority: low, normal, high",
            "default": "normal"
          }
        },
        "required": [
          "to",
          "subject",
          "body"
        ]
      },
      "class_name": "EmailSenderTool",
      "enabled": true,
      "configuration": {},
      "created_at": "2025-06-24 03:36:35.247957",
      "updated_at": "2025-06-24 03:36:35.247958"
    },
    {
      "id": 7,
      "name": "email_checker",
      "description": "Check emails using POP3 or IMAP protocols with SSL support. Supports reading emails, listing folders, and retrieving email content.",
      "parameters_schema": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "Action to perform: 'list_folders', 'check_emails', 'read_email'",
            "enum": [
              "list_folders",
              "check_emails",
              "read_email"
            ]
          },
          "protocol": {
            "type": "string",
            "description": "Email protocol: 'pop3' or 'imap'",
            "enum": [
              "pop3",
              "imap"
            ],
            "default": "imap"
          },
          "folder": {
            "type": "string",
            "description": "Email folder to check (e.g., 'INBOX', 'Sent', 'Drafts')",
            "default": "INBOX"
          },
          "limit": {
            "type": "integer",
            "description": "Maximum number of emails to retrieve",
            "default": 10,
            "minimum": 1,
            "maximum": 100
          },
          "unread_only": {
            "type": "boolean",
            "description": "Only retrieve unread emails",
            "default": false
          },
          "email_id": {
            "type": "string",
            "description": "Email ID to read (required for 'read_email' action)"
          },
          "include_attachments": {
            "type": "boolean",
            "description": "Include attachment information in email details",
            "default": true
          }
        },
        "required": [
          "action"
        ]
      },
      "class_name": "EmailCheckerTool",
      "enabled": true,
      "configuration": {
        "pop3_host": "pop.gmail.com",
        "pop3_port": 995,
        "pop3_username": "getanospo@gmail.com",
        "pop3_password": "fhxqtokpxiwmieoj",
        "pop3_use_ssl": true,
        "imap_host": "imap.gmail.com",
        "imap_port": 993,
        "imap_username": "getanospo@gmail.com",
        "imap_password": "fhxqtokpxiwmieoj",
        "imap_use_ssl": true
      },
      "created_at": "2025-06-24 03:36:35.254549",
      "updated_at": "2025-06-24 03:37:04.987857"
    },
    {
      "id": 8,
      "name": "email_data_converter",
      "description": "Convert email data between different formats and ensure proper object structure for workflow steps",
      "parameters_schema": {
        "type": "object",
        "properties": {
          "email_data": {
            "type": "string",
            "description": "Email data as JSON string or object reference"
          },
          "action": {
            "type": "string",
            "enum": [
              "convert_to_object",
              "extract_sender",
              "extract_attachments"
            ],
            "description": "Action to perform on the email data",
            "default": "convert_to_object"
          },
          "output_format": {
            "type": "string",
            "enum": [
              "object",
              "json_string"
            ],
            "description": "Output format for the converted data",
            "default": "object"
          }
        },
        "required": [
          "email_data",
          "action"
        ]
      },
      "class_name": "EmailDataConverterTool",
      "enabled": true,
      "configuration": {},
      "created_at": "2025-06-24 03:36:35.260702",
      "updated_at": "2025-06-24 03:36:35.260702"
    },
    {
      "id": 9,
      "name": "file_vault",
      "description": "Secure file vault for storing and retrieving temporary files. Files are stored in a controlled environment with security restrictions.",
      "parameters_schema": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "Action to perform: 'write', 'read', 'list', 'delete', 'info'",
            "enum": [
              "write",
              "read",
              "list",
              "delete",
              "info",
              "cleanup"
            ]
          },
          "filename": {
            "type": "string",
            "description": "Name of the file to operate on (required for write, read, delete, info)"
          },
          "content": {
            "type": "string",
            "description": "File content (required for write action)"
          },
          "content_type": {
            "type": "string",
            "description": "Type of content: 'text' or 'binary' (base64 encoded)",
            "enum": [
              "text",
              "binary"
            ],
            "default": "text"
          },
          "encoding": {
            "type": "string",
            "description": "Text encoding for text files",
            "default": "utf-8"
          },
          "overwrite": {
            "type": "boolean",
            "description": "Whether to overwrite existing files",
            "default": false
          },
          "pattern": {
            "type": "string",
            "description": "File pattern for listing files (e.g., '*.txt')",
            "default": "*"
          },
          "include_metadata": {
            "type": "boolean",
            "description": "Include file metadata in list results",
            "default": false
          },
          "vault_id": {
            "type": "string",
            "description": "Vault ID to use for this operation. If not provided, a new vault will be created."
          }
        },
        "required": [
          "action"
        ]
      },
      "class_name": "FileVaultTool",
      "enabled": true,
      "configuration": {},
      "created_at": "2025-06-24 03:36:35.266703",
      "updated_at": "2025-06-24 03:36:35.266704"
    },
    {
      "id": 10,
      "name": "attachment_downloader",
      "description": "Download email attachments to temporary locations. Works with email data from email_checker tool and attachment info from email_parser tool. Supports base64 decoding for encoded attachments.",
      "parameters_schema": {
        "type": "object",
        "properties": {
          "email_data": {
            "type": "object",
            "description": "Email data object from email_checker tool"
          },
          "file_type": {
            "type": "string",
            "description": "Specific file type to extract (e.g., 'json', 'pdf', 'txt')",
            "default": ""
          },
          "attachment_filenames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of attachment filenames to download (empty for all)",
            "default": []
          },
          "download_path": {
            "type": "string",
            "description": "Custom download path (optional, uses temp directory if not specified)",
            "default": ""
          },
          "create_subdirectories": {
            "type": "boolean",
            "description": "Create subdirectories for each email",
            "default": true
          },
          "sanitize_filenames": {
            "type": "boolean",
            "description": "Sanitize filenames for filesystem safety",
            "default": true
          },
          "max_file_size": {
            "type": "integer",
            "description": "Maximum file size in bytes (0 for no limit)",
            "default": 0
          },
          "decode_base64": {
            "type": "boolean",
            "description": "Attempt to decode base64-encoded content",
            "default": true
          }
        },
        "required": [
          "email_data"
        ]
      },
      "class_name": "AttachmentDownloaderTool",
      "enabled": true,
      "configuration": {},
      "created_at": "2025-06-24 03:36:35.274546",
      "updated_at": "2025-06-24 03:36:35.274547"
    },
    {
      "id": 11,
      "name": "email_attachment_downloader",
      "description": "Download email attachments to temporary locations. Works with email data from email_checker tool and attachment info from email_parser tool. Supports base64 decoding for encoded attachments.",
      "parameters_schema": {
        "type": "object",
        "properties": {
          "email_data": {
            "type": "object",
            "description": "Email data object from email_checker tool"
          },
          "file_type": {
            "type": "string",
            "description": "Specific file type to extract (e.g., 'json', 'pdf', 'txt')",
            "default": ""
          },
          "attachment_filenames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of attachment filenames to download (empty for all)",
            "default": []
          },
          "download_path": {
            "type": "string",
            "description": "Custom download path (optional, uses temp directory if not specified)",
            "default": ""
          },
          "create_subdirectories": {
            "type": "boolean",
            "description": "Create subdirectories for each email",
            "default": true
          },
          "sanitize_filenames": {
            "type": "boolean",
            "description": "Sanitize filenames for filesystem safety",
            "default": true
          },
          "max_file_size": {
            "type": "integer",
            "description": "Maximum file size in bytes (0 for no limit)",
            "default": 0
          },
          "decode_base64": {
            "type": "boolean",
            "description": "Attempt to decode base64-encoded content",
            "default": true
          },
          "store_in_vault": {
            "type": "boolean",
            "description": "Store downloaded files in the secure file vault",
            "default": false
          },
          "vault_prefix": {
            "type": "string",
            "description": "Prefix for files stored in vault (e.g., 'email_attachments_')",
            "default": "email_attachment_"
          }
        },
        "required": [
          "email_data"
        ]
      },
      "class_name": "EmailAttachmentDownloaderTool",
      "enabled": true,
      "configuration": {},
      "created_at": "2025-06-24 03:59:07.490205",
      "updated_at": "2025-06-24 06:32:30.090647"
    }
  ],
  "scheduled_tasks": [],
  "config": {
    "llm_config": {
      "default_provider": "ollama",
      "default_model": "granite3.2:2b",
      "fallback_enabled": true,
      "fallback_order": [
        "ollama",
        "bedrock",
        "openai",
        "openrouter"
      ],
      "providers": {
        "ollama": {
          "enabled": true,
          "url": "http://ollama:11434",
          "timeout": 300,
          "default_model": "granite3.2:2b",
          "supported_features": [
            "streaming",
            "chat",
            "generate",
            "embeddings",
            "model_management"
          ]
        }
      }
    },
    "database_path": "/app/data/agentic_ai.db",
    "tools_directory": "tools",
    "api_host": "0.0.0.0",
    "api_port": 8000,
    "max_agent_memory_entries": 20,
    "memory_cleanup_interval": 3600
  }
}